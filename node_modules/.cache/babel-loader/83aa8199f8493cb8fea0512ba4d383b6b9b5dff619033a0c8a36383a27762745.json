{"ast":null,"code":"var _jsxFileName = \"D:\\\\research_to_video\\\\src\\\\containers\\\\header\\\\UploadVideo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadVideo = () => {\n  _s();\n  const [pdfFile, setPdfFile] = useState(null);\n  const [convertedVideoUrl, setConvertedVideoUrl] = useState('');\n  const handleFileChange = e => {\n    setPdfFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('pdf_file', pdfFile);\n    try {\n      const response = await fetch('http://localhost:5000/upload_pdf', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setConvertedVideoUrl(data.video_url);\n    } catch (error) {\n      console.error('Error uploading PDF:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), convertedVideoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n      controls: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: convertedVideoUrl,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadVideo, \"5XnZANkI7kWVaGjZi/18Khh3h1M=\");\n_c = UploadVideo;\nexport default UploadVideo;\nvar _c;\n$RefreshReg$(_c, \"UploadVideo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadVideo","_s","pdfFile","setPdfFile","convertedVideoUrl","setConvertedVideoUrl","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","data","json","video_url","error","console","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","controls","src","_c","$RefreshReg$"],"sources":["D:/research_to_video/src/containers/header/UploadVideo.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UploadVideo = () => {\r\n    const [pdfFile, setPdfFile] = useState(null);\r\n    const [convertedVideoUrl, setConvertedVideoUrl] = useState('');\r\n\r\n    const handleFileChange = (e) => {\r\n        setPdfFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        formData.append('pdf_file', pdfFile);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/upload_pdf', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n            const data = await response.json();\r\n            setConvertedVideoUrl(data.video_url);\r\n        } catch (error) {\r\n            console.error('Error uploading PDF:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" accept=\".pdf\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload}>Upload PDF</button>\r\n            {convertedVideoUrl && (\r\n                <video controls>\r\n                    <source src={convertedVideoUrl} type=\"video/mp4\" />\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadVideo;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC5BJ,UAAU,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEX,OAAO,CAAC;IAEpC,IAAI;MACA,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCd,oBAAoB,CAACa,IAAI,CAACE,SAAS,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACItB,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAEpB;IAAiB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/D/B,OAAA;MAAQgC,OAAO,EAAErB,YAAa;MAAAa,QAAA,EAAC;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjD1B,iBAAiB,iBACdL,OAAA;MAAOiC,QAAQ;MAAAT,QAAA,gBACXxB,OAAA;QAAQkC,GAAG,EAAE7B,iBAAkB;QAACoB,IAAI,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gDAEvD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC7B,EAAA,CApCID,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}